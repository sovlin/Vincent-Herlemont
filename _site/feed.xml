<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vincent Herlemont</title>
    <description>This is my CV, and my amazing life on earth !
</description>
    <link>http://vincent-herlemont.github.io/</link>
    <atom:link href="http://vincent-herlemont.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 25 Apr 2015 20:28:44 +0200</pubDate>
    <lastBuildDate>Sat, 25 Apr 2015 20:28:44 +0200</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 24 Apr 2015 11:55:52 +0200</pubDate>
        <link>http://vincent-herlemont.github.io/jekyll/update/2015/04/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://vincent-herlemont.github.io/jekyll/update/2015/04/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Imagina international (l&#39;alternance)</title>
        <description>&lt;p&gt;Une année d’alternance en entreprise&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2013 02:00:00 +0200</pubDate>
        <link>http://vincent-herlemont.github.io/professional_experience/alternance/2013/09/01/imagina-international-alternance.html</link>
        <guid isPermaLink="true">http://vincent-herlemont.github.io/professional_experience/alternance/2013/09/01/imagina-international-alternance.html</guid>
        
        
        <category>professional_experience</category>
        
        <category>alternance</category>
        
      </item>
    
      <item>
        <title>Imagina international (le stage)</title>
        <description>&lt;p&gt;Site web : http://www.imagina-international.com/
Entreprise spécialisée dans l’édition d’un ERP (ATEN).&lt;/p&gt;

&lt;p&gt;1)Analyse performance
Problématique&lt;/p&gt;

&lt;p&gt;Tracer l’utilisation mémoire, tracer l’utilisation CPU. Temps d’exécution des méthodes. Compter le nombre d’invocations par méthode ainsi que leur temps d’exécution. 
Définir des cas d’utilisation pour les développeurs.
Définir les bonnes façons de coder / exemple : optimisation de code, comprendre les allocations mémoire  etc …
Outils testés et documentés : Jmeter, Visual VM+Jconsole, Jprofiler, Yourkit.&lt;/p&gt;

&lt;p&gt;Mise en production : Yourkit.&lt;/p&gt;

&lt;p&gt;3)Plateforme de test
  Problématique Test Fonctionnel&lt;/p&gt;

&lt;p&gt;Pouvoir créer des scénarios rapidement ; si assistés, c’est un plus. Les scénarios doivent se diviser en blocs d’actions et ainsi permettre de reconstituer de nouveaux scénarios grâce à ces blocs. 
  Exemple de bloc :  Connexion, Créer une fiche client, Rechercher une fiche client etc … 
  La solution doit également proposer un rapport détaillé de fin de test.&lt;/p&gt;

&lt;p&gt;Problématique Test Performance&lt;/p&gt;

&lt;p&gt;La solution de test choisie doit pouvoir déclencher en parallèle le même scénario avec des jeux de données différents (ou non). 
  Possibilité de décaler le lancement des scénarios permettant de simuler des cas d’utilisation réelle. Mesure globale des actions.&lt;/p&gt;

&lt;p&gt;Outils testés et documentés ( R&amp;amp;D ) :  soapUI, Casperjs ,Sahi.&lt;/p&gt;

&lt;p&gt;Outil de mise en production : Sahi&lt;/p&gt;

&lt;p&gt;2)Outil de déploiement&lt;/p&gt;

&lt;p&gt;Cet outil a été créé entièrement en nodeJS avec le soutien des librairies expressjs et socket.io.
L’interface utilisateur a été créée en utilisant la librairie angularjs. Le design a bénéficié de l’aide de la librairie pure css.&lt;/p&gt;

&lt;p&gt;Fonctionnalités :
Affichage de l’état (allumé / éteint) des instances
Affichage de l’état (allumé / éteint) des serveurs
Mise à jour de déploiement de l’instance
Affichage en temps réel des traces de debug données par les taches ant
Verrouillage d’une instance
Possibilité d’indiquer le nom de la personne travaillant sur l’instance
L’utilisateur peut indiquer le temps durant lequel l’instance est verrouillée.
Ce temps décrémentera jusqu’à déverrouillage de l’instance.
  Téléchargement de l’instance compilée.
  Accès interne / externe de l’instance.
  Upload fichier HTML5
  Consultation des fichiers
  Téléchargement des fichiers
  Suppression des fichiers&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/pages/professional_experience/outil_deploiment.jpg&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 20 May 2013 02:00:00 +0200</pubDate>
        <link>http://vincent-herlemont.github.io/professional_experience/stage/2013/05/20/imagina-international-stage.html</link>
        <guid isPermaLink="true">http://vincent-herlemont.github.io/professional_experience/stage/2013/05/20/imagina-international-stage.html</guid>
        
        
        <category>professional_experience</category>
        
        <category>stage</category>
        
      </item>
    
  </channel>
</rss>
